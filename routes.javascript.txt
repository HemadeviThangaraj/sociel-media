const express = require('express');
const router = express.Router();
const MyModel = require('../models/MyModel'); // Assuming you have a model defined

// Define routes
router.get('/api/mymodels', async (req, res) => {
  try {
    // Retrieve all MyModel documents from the database
    const myModels = await MyModel.find();
    res.json(myModels);
  } catch (error) {
    res.status(500).json({ message: 'Error retrieving MyModels' });
  }
});

router.get('/api/mymodels/:id', async (req, res) => {
  try {
    // Retrieve a specific MyModel document based on the provided ID
    const myModel = await MyModel.findById(req.params.id);
    if (!myModel) {
      return res.status(404).json({ message: 'MyModel not found' });
    }
    res.json(myModel);
  } catch (error) {
    res.status(500).json({ message: 'Error retrieving MyModel' });
  }
});

router.post('/api/mymodels', async (req, res) => {
  try {
    // Create a new MyModel document with the provided data
    const newModel = new MyModel(req.body);
    const savedModel = await newModel.save();
    res.status(201).json(savedModel);
  } catch (error) {
    res.status(500).json({ message: 'Error creating MyModel' });
  }
});

router.put('/api/mymodels/:id', async (req, res) => {
  try {
    // Update a specific MyModel document based on the provided ID and data
    const updatedModel = await MyModel.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
    });
    if (!updatedModel) {
      return res.status(404).json({ message: 'MyModel not found' });
    }
    res.json(updatedModel);
  } catch (error) {
    res.status(500).json({ message: 'Error updating MyModel' });
  }
});

router.delete('/api/mymodels/:id', async (req, res) => {
  try {
    // Delete a specific MyModel document based on the provided ID
    const deletedModel = await MyModel.findByIdAndDelete(req.params.id);
    if (!deletedModel) {
      return res.status(404).json({ message: 'MyModel not found' });
    }
    res.json({ message: 'MyModel deleted' });
  } catch (error) {
    res.status(500).json({ message: 'Error deleting MyModel' });
  }
});

module.exports = router;
